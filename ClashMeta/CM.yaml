# Author:https://github.com/Repcz
# TG:https://t.me/QVQ_Channel
# 以 ';' 或 '#' 或 '//' 开头的配置文件行为注释行
#
# 最后更新时间: 2023/7/28
#
# ================

#port: 7890           # HTTP 代理端口
#socks-port: 7891     # SOCKS5 代理端口
#redir-port: 7892     # Linux 和 macOS 的 redir 代理端口
mixed-port: 7893      # 混合端口 HTTP和SOCKS5用一个端口
geodata-mode: true    #【Meta专属】使用geoip.dat数据库(默认：false使用mmdb数据库)
tcp-concurrent: false  #【Meta专属】TCP 并发连接所有 IP, 将使用最快握手的 TCP
allow-lan: true       # 允许局域网的连接（可用来共享代理）
bind-address: "*"     # 仅在将allow-lan设置为true时适用
                      # #"*": 绑定所有IP地址
find-process-mode: strict           #匹配所有进程（always/strict/off）
ipv6: false           # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
mode: rule            # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info       # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
external-controller: 0.0.0.0:9093   #外部控制器,可以使用 RESTful API 来控制你的 clash 内核
global-client-fingerprint: chrome   #全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
                                    #可选： "chrome","firefox","safari","ios","random","none" options.

geox-url:             #自定义 geodata url
  geoip: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat"
  geosite: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
  mmdb: "https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"

profile:
  store-selected: true # 存储 select 选择记录
  store-fake-ip: true  # 持久化 fake-ip
  
sniffer:               # 嗅探域名 可选配置
  enable: true
  parse-pure-ip: true  # 是否使用嗅探结果作为实际访问，默认 true
  sniff:
    TLS:               # TLS 默认嗅探 443
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
  force-domain:        # 强制对此域名进行嗅探
     - "+.netflix.com"
     - "+.nflxvideo.net"
     - "+.amazonaws.com"
     - "+.media.dssott.com"
     - 'google.com'
  sniffing:            # 需要嗅探协议
     - tls
     - http
      
tun:                   # Tun 配置
  enable: true
  stack: system        # 可选： system/gvisor/lwip
                       # tun模式堆栈,如无使用问题,建议使用 system 栈;
                       # MacOS 用户推荐 gvisor栈,IOS无法使用system栈
  dns-hijack:          # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
     - 'any:53'
# strict_route: true   # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  auto-route: true     # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-detect-interface: true     # 自动识别出口网卡
        
dns:
  enable: true             # 关闭将使用系统 DNS
  ipv6: false              # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip   # 模式：redir-host或fake-ip
  listen: 0.0.0.0:53       # DNS监听地址
  default-nameserver:      # 解析非IP的dns用的dns服务器,只支持纯IP
     - 223.5.5.5
     - 119.29.29.29
  fake-ip-range: 198.18.0.1/16    # Fake-IP解析地址池
  fake-ip-filter: ['*.lan', 'cable.auth.com', '*.msftconnecttest.com', '*.msftncsi.com', 'network-test.debian.org', 'detectportal.firefox.com', 'resolver1.opendns.com', '*.srv.nintendo.net', '*.stun.playstation.net', 'xbox.*.microsoft.com', '*.xboxlive.com', 'stun.*', 'global.turn.twilio.com', 'global.stun.twilio.com', 'localhost.*.qq.com', 'localhost.*.weixin.qq.com', '*.logon.battlenet.com.cn', '*.logon.battle.net', '*.blzstatic.cn', 'music.163.com', '*.music.163.com', '*.126.net', 'musicapi.taihe.com', 'music.taihe.com', 'songsearch.kugou.com', 'trackercdn.kugou.com', '*.kuwo.cn', 'api-jooxtt.sanook.com', 'api.joox.com', 'joox.com', 'y.qq.com', '*.y.qq.com', 'streamoc.music.tc.qq.com', 'mobileoc.music.tc.qq.com', 'isure.stream.qqmusic.qq.com', 'dl.stream.qqmusic.qq.com', 'aqqmusic.tc.qq.com', 'amobile.music.tc.qq.com', '*.xiami.com', '*.music.migu.cn', 'music.migu.cn', 'proxy.golang.org', '*.mcdn.bilivideo.cn', '*.cmpassport.com', 'id6.me', 'open.e.189.cn', 'mdn.open.wo.cn', 'opencloud.wostore.cn', 'auth.wosms.cn', '*.jegotrip.com.cn', '*.icitymobile.mobi', '*.pingan.com.cn', '*.cmbchina.com', 'pool.ntp.org', '*.pool.ntp.org', 'ntp.*.com', 'time.*.com', 'ntp?.*.com', 'time?.*.com', 'time.*.gov', 'time.*.edu.cn', '*.ntp.org.cn', 'PDC._msDCS.*.*', 'DC._msDCS.*.*', 'GC._msDCS.*.*']
                          # fake ip 白名单列表'以下地址不会下发fakeip映射用于连接
  nameserver:             # 默认DNS服务器，支持udp/tcp/dot/doh/doq
     - 223.5.5.5
     - 119.29.29.29
  fallback:               # 解析国外域名的DNS服务器
     - https://doh.pub/dns-query
     - https://dns.alidns.com/dns-query
  fallback-filter:        # 配置 fallback 使用条件
    geoip: true           # 配置是否使用 geoip
    geoip-code: CN        # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
    geosite:              # 配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
      - gfw
      - geolocation-!cn
    ipcidr:               # 在这个网段内的 IP 地址会被考虑为被污染的 IP
      - 240.0.0.0/4
      
###建立锚点
    
# 策略组引用相关参数
pr: &pr {type: select, proxies: [🚀 手动切换, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇸🇬 狮城节点, 🇯🇵 日本节点,  🇨🇳 台湾节点, ♻️ 自动选择, DIRECT]}
#pr: &pr {type: select, proxies: [🚀 手动切换,  🇭🇰 香港节点, 🇺🇲 美国节点, 🇸🇬 狮城节点, 🇯🇵 日本节点,  🇨🇳 台湾节点, 🇬🇧 英国节点, 🇦🇺 澳洲节点, 🇮🇳 印度节点, ♻️ 自动选择, DIRECT]}

# 订阅更新和延迟测试相关参数
p: &p {type: http, interval: 86400, health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800}}

# 自动选择策略组：选取延迟最低节点
auto: &auto {type: url-test, lazy: true, url: http://www.gstatic.com/generate_204, interval: 900, select: [Subscribe]}

# 手动选择策略组：手动选择想要的节点/策略组
select: &select {type: select, select: [Subscribe]}

# 故障回退策略组：策略组将按顺序选择你列表中第一个可用的节点
fallback: &fallback {type: fallback, lazy: true, url: http://www.gstatic.com/generate_204, interval: 900, select: [Subscribe]}

# 负载均衡策略组：不同的请求将使用不同的代理节点
load-balance: &load-balance {type: load-balance, lazy: true, url: http://www.gstatic.com/generate_204, interval: 900, select: [Subscribe]}

# classical规则相关
c: &c {type: http, behavior: classical, interval: 86400}

# domain规则相关
d: &d {type: http, behavior: domain, interval: 86400}

# ipcidr规则相关
i: &i {type: http, behavior: ipcidr, interval: 86400}

###结束

proxy-providers:
  Subscribe: {<<: *p, path: ./all.yaml, url: 机场订阅}
    # Meta支持机场通用订阅
          
proxies: 

proxy-groups:

 #分流分组

 - {name: 🚀 手动切换, <<: *select}

 - {name: 🌏 国外网站, <<: *pr}

 - {name: 📹 国际媒体, <<: *pr}

 - {name: 🍎 苹果服务, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇺🇲 美国节点]}

 - {name: 🧩 微软服务, <<: *pr}

 - {name: 🌌 谷歌服务, <<: *pr}

 - {name: 📟 电报消息, <<: *pr}

 - {name: 🐦 推特消息, <<: *pr}
 
 - {name: 🤖 OpenAI, type: select, proxies: [DIRECT, 🇺🇲 美国节点, 🚀 手动切换]}

 - {name: 🎮 游戏平台, <<: *pr}
  
 - {name: 📺 哔哩哔哩, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点]}

 - {name: 🌏 国内网站, type: select, proxies: [DIRECT, 🚀 手动切换]}
  
 - {name: 🛑 AdBlock, type: select, proxies: [REJECT, DIRECT]}
  
 - {name: 🐟 漏网之鱼, <<: *pr}
 
 #节点地区分组
 
 - {name: 🇭🇰 香港节点, <<: *select, filter: "^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

 - {name: 🇺🇲 美国节点, <<: *select, filter: "^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

 - {name: 🇸🇬 狮城节点, <<: *select, filter: "^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

 - {name: 🇯🇵 日本节点, <<: *select, filter: "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

 - {name: 🇨🇳 台湾节点, <<: *select, filter: "^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

 #- {name: 🇬🇧 英国节点, <<: *auto, filter: "^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}
  
 #- {name: 🇦🇺 澳洲节点, <<: *auto, filter: "^(?=.*((?i)🇦🇺|澳大利亚|(\b(AU|Australia)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}
 
 #- {name: 🇮🇳 印度节点, <<: *auto, filter: "^(?=.*((?i)🇮🇳|印度|班加罗尔|孟买|(\b(Mumbai|IN|India)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}
 
 - {name: ♻️ 自动选择, <<: *auto}
  

    
rules:
  - GEOSITE,category-ads-all,🛑 AdBlock
  - GEOSITE,private,DIRECT
  - GEOIP,private,DIRECT
  - GEOSITE,category-games,🎮 游戏平台
  - GEOSITE,openai,🤖 OpenAI
  - GEOSITE,youtube,🌌 谷歌服务
  - GEOIP,netflix,📹 国际媒体
  - GEOSITE,netflix,📹 国际媒体
  - GEOSITE,hbo,📹 国际媒体
  - GEOSITE,disney,📹 国际媒体
  - GEOSITE,primevideo,📹 国际媒体
  - GEOSITE,github,🧩 微软服务
  - GEOSITE,bilibili,📺 哔哩哔哩
  - GEOSITE,telegram,📟 电报消息
  - GEOIP,telegram,📟 电报消息
  - GEOIP,twitter,🐦 推特消息
  - GEOSITE,twitter,🐦 推特消息
  - GEOSITE,apple,🍎 苹果服务
  - GEOSITE,microsoft,🧩 微软服务
  - GEOIP,google,🌌 谷歌服务
  - GEOSITE,google,🌌 谷歌服务
  - GEOSITE,bilibili,📺 哔哩哔哩
  - GEOSITE,geolocation-!cn,🌏 国外网站
  - GEOSITE,cn,🌏 国内网站
  - GEOIP,CN,🌏 国内网站
  - MATCH,🐟 漏网之鱼
